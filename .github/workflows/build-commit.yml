name: build-commit

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 2 * * *" # Run nightly at 2 AM UTC

env:
  CI: true

jobs:

  build-noir_wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: ${{ vars.NIX_CACHE_NAME }}
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}

      - name: Build wasm package
        run: |
          nix build -L .#noir_wasm

  build-noirc_abi_wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: ${{ vars.NIX_CACHE_NAME }}
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}
        
      - name: Build wasm package
        run: |
          nix build -L .#noirc_abi_wasm

  build-acvm_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: ${{ vars.NIX_CACHE_NAME }}
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}
        
      - name: Build wasm package
        run: |
          nix build -L .#acvm_js
  
  build-packages:
    runs-on: ubuntu-latest
    needs: [build-acvm_js, build-noirc_abi_wasm, build-noir_wasm]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete current packages
        run: |          
          rm -rf types source-resolver backend_barretenberg noir_js acvm_js noirc_abi_wasm noir_wasm

      - uses: actions/checkout@v3
        with:
          repository: "noir-lang/noir"
          ref: ${{ inputs.noir-ref || 'master' }}
          path: ".cache/noir"

      - name: Collect `noir-lang/noir` Revision
        id: collect-rev
        working-directory: ".cache/noir"
        run: |
          echo "NOIR_REV_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: ${{ vars.NIX_CACHE_NAME }}
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}

      - name: Use Yarn Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: "**/node_modules"
          key: yarn-v1-${{ hashFiles('**/yarn.lock') }}

      - name: Install Noir Workspace Dependencies
        working-directory: ".cache/noir"
        run: yarn install
        shell: bash
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Build ES Packages
        working-directory: ".cache/noir"
        run: yarn prepare:publish


      - name: Build all pure js packages
        working-directory: ".cache/noir"
        run: |
          yarn workspace @noir-lang/types pack --out types.tgz
          mkdir -p tmp/types
          tar -xvf tooling/noir_js_types/types.tgz -C tmp/types

          yarn workspace @noir-lang/source-resolver pack --out source-resolver.tgz
          mkdir -p tmp/source-resolver
          tar -xvf compiler/source-resolver/source-resolver.tgz -C tmp/source-resolver

          yarn workspace @noir-lang/backend_barretenberg pack --out backend_barretenberg.tgz
          mkdir -p tmp/backend_barretenberg
          tar -xvf tooling/noir_js_backend_barretenberg/backend_barretenberg.tgz -C tmp/backend_barretenberg

          yarn workspace @noir-lang/noir_js pack --out noir_js.tgz
          mkdir -p tmp/noir_js
          tar -xvf tooling/noir_js/noir_js.tgz -C tmp/noir_js

      - name: Copy packages to root
        run: |          
          mkdir -p types
          cp -r .cache/noir/tmp/types/package/* ./types/

          mkdir -p source-resolver
          cp -r .cache/noir/tmp/source-resolver/package/* ./source-resolver/

          mkdir -p backend_barretenberg
          cp -r .cache/noir/tmp/backend_barretenberg/package/* ./backend_barretenberg/

          mkdir -p noir_js
          cp -r .cache/noir/tmp/noir_js/package/* ./noir_js/

          mkdir -p ./acvm_js/
          mkdir -p ./noirc_abi_wasm/
          mkdir -p ./noir_wasm/
          cp -rL $(readlink -f .cache/noir/result)/acvm_js/* ./acvm_js/
          cp -rL $(readlink -f .cache/noir/result)/noirc_abi_wasm/* ./noirc_abi_wasm/
          cp -rL $(readlink -f .cache/noir/result)/noir_wasm/* ./noir_wasm/

      - name: Configure git
        run: |
          git config user.name kobyhallx
          git config user.email koby@aztecprotocol.com

      - name: Commit updates
        run: |
          git add ./types 
          git add ./source-resolver 
          git add ./backend_barretenberg 
          git add ./acvm_js 
          git add ./noirc_abi_wasm 
          git add ./noir_wasm
          git add ./noir_js 
          git commit -m "tracking noir@${{ steps.collect-rev.outputs.NOIR_REV_SHORT }}"
          git push --force
  