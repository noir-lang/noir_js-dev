name: build-commit

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 2 * * *" # Run nightly at 2 AM UTC

env:
  CI: true

jobs:
  build-packages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete current packages
        run: |          
          rm -r types source-resolver backend_barretenberg noir_js acvm_js noirc_abi_wasm noir_wasm

      - uses: actions/checkout@v3
        with:
          repository: "noir-lang/noir"
          ref: ${{ inputs.noir-ref || 'master' }}
          path: ".cache/noir"

      - name: Collect `noir-lang/noir` Revision
        id: collect-rev
        working-directory: ".cache/noir"
        run: |
          echo "NOIR_REV_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v12
        with:
          name: barretenberg
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build `#all_wasm` package targets, install into workspace
        working-directory: ".cache/noir"
        run: |
          nix build -L .#all_wasm
          cp -r ./result/acvm_js/nodejs ./acvm-repo/acvm_js
          cp -r ./result/acvm_js/web ./acvm-repo/acvm_js
          cp -r ./result/noirc_abi_wasm/nodejs ./tooling/noirc_abi_wasm
          cp -r ./result/noirc_abi_wasm/web ./tooling/noirc_abi_wasm
          cp -r ./result/noir_wasm/nodejs ./compiler/wasm
          cp -r ./result/noir_wasm/web ./compiler/wasm
          
      - name: Build all pure js packages
        working-directory: ".cache/noir"
        run: |
          yarn workspace @noir-lang/types build
          yarn workspace @noir-lang/types pack --out types.tgz
          mkdir -p tmp/types
          tar -xvf types.tgz -C tmp/types

          yarn workspace @noir-lang/source-resolver build
          yarn workspace @noir-lang/source-resolver pack --out source-resolver.tgz
          mkdir -p tmp/source-resolver
          tar -xvf source-resolver.tgz -C tmp/source-resolver

          yarn workspace @noir-lang/backend_barretenberg build
          yarn workspace @noir-lang/backend_barretenberg pack --out backend_barretenberg.tgz
          mkdir -p tmp/backend_barretenberg
          tar -xvf backend_barretenberg.tgz -C tmp/backend_barretenberg

          yarn workspace @noir-lang/noir_js build
          yarn workspace @noir-lang/noir_js pack --out noir_js.tgz
          mkdir -p tmp/noir_js
          tar -xvf noir_js.tgz -C tmp/noir_js

      - name: Copy packages to root
        run: |          
          mkdir -p types
          cp -r .cache/noir/tmp/types/package/* ./types/

          mkdir -p source-resolver
          cp -r .cache/noir/tmp/source-resolver/package/* ./source-resolver/

          mkdir -p backend_barretenberg
          cp -r .cache/noir/tmp/backend_barretenberg/package/* ./backend_barretenberg/

          mkdir -p noir_js
          cp -r .cache/noir/tmp/noir_js/package/* ./noir_js/

          cp -r .cache/noir/result/* ./

      - name: Configure git
        run: |
          git config user.name kobyhallx
          git config user.email koby@aztecprotocol.com

      - name: Commit updates
        run: |
          git add ./types 
          git add ./source-resolver 
          git add ./backend_barretenberg 
          git add ./acvm_js 
          git add ./noirc_abi_wasm 
          git add ./noir_wasm
          git add ./noir_js 
          git commit -m "tracking noir@${{ steps.collect-rev.outputs.NOIR_REV_SHORT }}"
          git push --force
  